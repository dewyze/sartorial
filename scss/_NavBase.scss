// Navbar
// ------
$navbar-height: 6rem !default;
$navbar-spacing: 1.5rem !default;
$navbar-horizontal-padding: $navbar-spacing / 2 !default;
$navbar-vertical-padding: $navbar-spacing * (2 / 3) !default;

// Colors
// ------
$color-navbar-background: #ffffff !default;
$color-navbar-background-hover: #fafafa !default;

.navbar {
  position: relative;
  &:not(.full-width) {
    max-width: $container-width;
    @include margin(null auto);
  }
  flex-wrap: wrap;
  width: 100%;
  min-height: $navbar-height;
  display: flex;
  background-color: $color-navbar-background;
  padding-left: 20px;
  align-items: stretch;

  img.navbar-image {
    height: $navbar-height - ($navbar-vertical-padding * 2);
  }

  &.centered {
    justify-content: center;
  }
  &:not(.centered) {
    .navbar-right {
      margin-left: auto;
      & ~ .navbar-right {
        margin-left: unset;
      }
    }
  }

  a {
    text-decoration: none;
    color: $color-links;

    &:hover {
      color: $color-links-hover;
    }
  }

  .icon,
  i {
    margin-right: 0.75rem;
  }
}

.navbar-logo {
  display: flex;
  flex: 0 1 auto;
  align-items: center;
  padding: $navbar-vertical-padding $navbar-horizontal-padding;
}

.navbar-item {
  align-items: center;
  padding: $navbar-vertical-padding ($navbar-horizontal-padding * 3);
  &:not(.navbar-no-bg) {
    background-color: transparent;
    &:hover {
      background-color: $color-navbar-background-hover;
    }
  }
}

@mixin navbar-item-collapsed {
  display: flex;
  order: 4;
  flex: 1 100%;
  margin-left: -20px; // TODO: Is this the best way to solve this?
}

.navbar-no-collapse {
  display: flex;
  flex: 0 1 auto;
}

@include mobile {
  .navbar-desktop-only {
    display: none;
  }

  .navbar-item {
    display: none;
  }

  label.navbar-toggle {
    display: flex;
    order: 3;
    position: relative;
    width: $navbar-height;
    height: $navbar-height;
    margin-left: auto;
    background-color: transparent;
    padding: $navbar-vertical-padding $navbar-horizontal-padding;
    &:hover {
      background-color: $color-navbar-background-hover;
    }

    span {
      position: absolute;
      width: 20px;
      display: block;
      height: 1px;
      background-color: black;
      left: calc(50% - 10px);
    }

    @for $i from 1 to 4 {
      span:nth-child(#{$i}) {
        top: calc(50% - #{(($i) * 8) - 16}px);
      }
    }
  }

  input.navbar-toggle {
    display: none;
    &:checked {
      & + label.navbar-toggle {
        span {
          top: 0;
          -webkit-transition: -webkit-transform 0.2s linear;
          -ms-transition: -ms-transform 0.2s linear;
          transition: transform 0.2s linear;
          &:nth-child(1) {
            transform: rotate(45deg);
            -ms-transform: rotate(45deg);
            -webkit-transform: rotate(45deg);
            top: 50%;
          }
          &:nth-child(2) {
            transform: rotate(-45deg);
            -ms-transform: rotate(-45deg);
            -webkit-transform: rotate(-45deg);
            top: 50%;
          }
          &:nth-child(3) {
            display: none;
          }
        }
      }

      ~ .navbar-item:not(.navbar-no-collapse):not(.navbar-mobile-only),
      ~ .navbar-collapse-only {
        @include navbar-item-collapsed;
      }
    }
  }

  .navbar-no-collapse,
  .navbar-mobile-only {
    display: flex;
    order: 2;
  }
}

@include desktop {
  .navbar-item,
  .navbar-desktop-only {
    display: flex;
    flex: 0 1 auto;
    padding: $navbar-vertical-padding $navbar-horizontal-padding;
  }

  .navbar-toggle,
  .navbar-mobile-only,
  .navbar-collapse-only,
  .navbar-mobile-only {
    display: none;
  }
}
