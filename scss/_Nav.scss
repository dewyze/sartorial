.navbar {
  position: relative;
  &:not(.full-width) {
    max-width: $container-width;
    @include margin(null auto);
  }
  width: 100%;
  min-height: $navbar-height;
  display: flex;
  background-color: $color-navbar-background;
  align-items: stretch;

  .navbar-start,
  .navbar-end,
  .navbar-right,
  .navbar-center,
  .navbar-left {
    display: flex;
    align-items: stretch;
  }

  .navbar-start {
    margin-right: auto;
  }

  .navbar-end {
    margin-left: auto;
  }

  // TODO: Center should not be used without left/right
  .navbar-left {
    flex: 1;
  }

  .navbar-center {
    flex: 1;
    justify-content: center;
  }

  .navbar-right {
    flex: 1;
    justify-content: flex-end;
  }

  // .navbar-item-right {
  //   margin-left: auto;
  //   & ~ .navbar-item-right {
  //     margin-left: unset;
  //   }
  // }
  //
  // .navbar-logo,
  // .navbar-item-left,
  // .navbar-item-right {
  //   display: flex;
  //   align-items: center;
  //   padding: 0.5rem ($navbar-spacing / 2);
  // }
  //
  // .navbar-item-left,
  // .navbar-item-right {
  //   background-color: transparent;
  //
  //   &:hover {
  //     background-color: $color-navbar-background-hover;
  //   }
  // }

  // TODO: These paddings should be vars probably
  img {
    height: $navbar-height - ($navbar-spacing * 1.333333);
  }

  a {
    text-decoration: none;
    color: $color-links;

    &:hover {
      color: $color-links-hover;
    }
  }

  .icon,
  i {
    margin-right: 0.75rem;
  }

  @include phone {
    input.navbar-toggle {
      display: none;
      &:checked {
        & + label.navbar-toggle {
          padding: ($navbar-spacing * 0.66667) ($navbar-spacing / 2);
          span {
            position: absolute;
            width: 20px;
            display: block;
            height: 1px;
            background-color: black;
            left: calc(50% - 10px);
            top: 0;
            -webkit-transition: -webkit-transform 0.2s linear;
            -ms-transition: -ms-transform 0.2s linear;
            transition: transform 0.2s linear;
          }
          span:nth-child(1) {
            transform: rotate(45deg);
            -ms-transform: rotate(45deg);
            -webkit-transform: rotate(45deg);
            top: 50%;
          }
          span:nth-child(2) {
            transform: rotate(-45deg);
            -ms-transform: rotate(-45deg);
            -webkit-transform: rotate(-45deg);
            top: 50%;
          }
          span:nth-child(3) {
            display: none;
          }
        }
      }
      &:not(:checked) {
        & + label.navbar-toggle {
          display: flex;
          position: relative;
          width: $navbar-height;
          height: $navbar-height;
          margin-left: auto;
          padding: ($navbar-spacing * 0.66667) ($navbar-spacing / 2);
          span {
            position: absolute;
            width: 20px;
            display: block;
            height: 1px;
            background-color: black;
            left: calc(50% - 10px);
          }
          @for $i from 1 to 4 {
            span:nth-child(#{$i}) {
              top: calc(50% - #{(($i) * 8) - 16}px);
            }
          }
        }
      }
    }

    label.navbar-toggle {
      display: flex;
      position: relative;
      width: $navbar-height;
      height: $navbar-height;
      margin-left: auto;
      background-color: transparent;
      &:hover {
        background-color: $color-navbar-background-hover;
      }
    }
  }

  @include desktop {
    .navbar-toggle {
      display: none !important;
    }
  }
}
